name: Deploy master branch

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
          version: 9.3.0
          run_install: false

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'pnpm'

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Configure AWS credentials (${{ secrets.IAM_ROLE }})
      uses: aws-actions/configure-aws-credentials@v1
      id: credentials # note `id` needs to be set
      with:
        role-session-name: assume_role
        role-to-assume: ${{ secrets.IAM_ROLE }}
        aws-region: us-east-1

    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy --use-local-credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.credentials.outputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.credentials.outputs.aws-secret-access-key }}

